---
export const prerender = true;

import { getCollection, getEntry } from "astro:content";
import Layout from "@layouts/Layout.astro";
import PostThumb from "@components/article/postThumb.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import TopicFAQ from '@components/article/topicFAQ.astro';

export async function getStaticPaths() {
  const allTopics = await getCollection("topics");
  return allTopics.map((topic) => ({params: { topic: topic.id } }));
}

let { topic } = Astro.params;
const topicEntry = await getEntry('topics', topic);
const description = topicEntry?.data.description;


const isPublished = ({data}) => (!data.draft && data.datePublished<=new Date());
const isDev = import.meta.env.APP_ENV==='dev';
const allPosts = await getCollection("posts", (ar) => {
  return (isPublished(ar) || isDev) ;
});

// Filter posts based on the slugified tag or category
const posts = allPosts.filter(({data}) => data.topics.map((topic) => topic).includes(topic));

// load faq data by collection type and slug?
const faqs = await getEntry('faqs', topic);
---

<Layout title={topic} description={description}>
   { !!faqs && (<TopicFAQ faqs={faqs} max=8 />)}
   { !faqs && (
     <Sectionhead>
       <Fragment slot="title"> Article Topics </Fragment>
       <Fragment slot="desc"> Posts associated with “{topic}” </Fragment>
     </Sectionhead>
   )}
  <Container class="w-full mx-5 sm:mx-15">
    <main class="flex flex-wrap justify-center gap-20 mt-5">
      {Array.isArray(posts) && posts.map((post) => (
        <div class="flex-none articlePost"
            data-title={post.data.title}
            data-tags={post.data.tags.join(',')}
            data-language={post.data.language}>
          <PostThumb post={post} />
        </div>
      ))}
    </main>
  </Container>
</Layout>

<script type="text/javascript">
  document.addEventListener('DOMContentLoaded', function() {
    const selectedLanguage = localStorage.getItem('selectedLanguage') || 'en';
    const articles = document.querySelectorAll('.articlePost');
    articles.forEach(article => {
      const language = article.dataset.language.toLowerCase();
      if (language === selectedLanguage)  article.classList.remove('hidden');
        else article.classList.add('hidden');
    });
  });
</script>
