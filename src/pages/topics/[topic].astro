---
export const prerender = true;

import Layout from "@layouts/Layout.astro";
import PostThumb from "@components/article/postThumb.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import TopicFAQ from '@components/article/topicFAQ.astro';
import { getDataCollection, getPublishedArticles } from "@utils/utils.js";

export async function getStaticPaths() {
  const allTopics = await getDataCollection("topics");
  const allFAQs = await getDataCollection("faqs");
  const allArticles = await getPublishedArticles();
  return allTopics.map((topic) => {
    const articleTopicsHasMatch = (ar) => ar.data?.topics?.includes(topic.id);
    return {
      params: {topic: topic.id},
      props: {
        topic,
        faqs: allFAQs.find(faq => faq.id === topic.id),
        posts: allArticles.filter(articleTopicsHasMatch)
      }
    }
  });
}


const slug = Astro.params.topic;
const { topic, faqs, posts } = Astro.props;
---

<Layout title={slug} description={topic?.data?.description}>
   { !!faqs && (<TopicFAQ faqs={faqs} max=8 />)}
   { !faqs && (
     <Sectionhead>
       <Fragment slot="title"> Article Topics </Fragment>
       <Fragment slot="desc"> Posts associated with “{slug}” </Fragment>
     </Sectionhead>
   )}
  <Container class="w-full mx-5 sm:mx-15">
    <main class="flex flex-wrap justify-center gap-20 mt-5">
      {Array.isArray(posts) && posts.map((post) => (
        <div class="flex-none articlePost hidden"
            data-title={post.data.title}
            data-tags={post.data.tags.join(',')}
            data-language={post.data.language}>
          <PostThumb post={post} />
        </div>
      ))}
    </main>
  </Container>
</Layout>

<script type="text/javascript">
  // hide articles that do not match the currently selected language
  document.addEventListener('DOMContentLoaded', function() {
    const selectedLanguage = localStorage.getItem('selectedLanguage') || 'en';
    const articles = document.querySelectorAll('.articlePost');
    articles.forEach(article => {
      const language = article.dataset.language.toLowerCase();
      if (language === selectedLanguage)  article.classList.remove('hidden');
        else article.classList.add('hidden');
    });
  });
</script>
