---
export const prerender = false; // don't forget this for all SSR routes

import { lucia } from '@lib/auth';
import { Argon2id } from "oslo/password";
import Layout from "@layouts/Layout.astro";
import { db, Users, eq } from 'astro:db';
import { seedSuperUser } from '@utils/utils';
// import Container from "@components/container.astro";

// Setup for error messaging
let errorMsg = '';

if (Astro.request.method === "POST") {
  // this will fail if not SSR
  const formData = await Astro.request.formData();
  const email = formData.get('email').trim().toLowerCase();
  const password = formData.get('password').trim();
  const isValidEmail = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(email);
  const isValidPassword = /^(?=.*\d).{7,64}$/.test(password); // 1 digit and 7-64 characters
  if (!isValidEmail)  errorMsg = 'Invalid email address.';
    else if (!isValidPassword) errorMsg = 'Invalid password.';

   if (!errorMsg) try {
      // user email and hashed password match
      seedSuperUser();
      const user = (await db.select().from(Users).where(eq(Users.email, email)))[0];
      if (!user) {
        console.log('Failed to load user from: ', email);
        let users = await db.select().from(Users);
        // console.error('all users: ', JSON.stringify(users));
      }
      // console.log('Validating user login:', user, user?.hashed_password);
      const isValidUser = !!user && (await new Argon2id().verify(user?.hashed_password, password));
      // console.log(isValidUser ? "valid user" : "not valid user");
      // console.log(password);
      // if valid user found, create session and redirect to admin
      if (isValidUser) {
        const session = await lucia.createSession(user.id, {role: 'visitor'});
        //console.log('Session', !!session ? "session created" : "session not created");
        const sessionCookie = lucia.createSessionCookie(session.id);
        //console.log('Cookie', sessionCookie ? "cookie created" : "cookie not created");
        Astro.cookies.set(sessionCookie.name, sessionCookie.value, sessionCookie.attributes);
        return Astro.redirect('/admin', 303);
      } else errorMsg = 'Invalid email or password.';

    } catch (error) {
        console.error('Authentication error:', error);
        errorMsg = 'An error occurred during authentication.';
    }
}
---

<Layout title="Administration Login">
  <div class="flex justify-center items-center bg-gray-100 py-10 min-h-[80vh]">
    <div class="w-full max-w-xs">
      <form id="login-form" method="POST"
            class="bg-white shadow-md rounded px-8 pt-6 pb-6 mb-4">
        <div id="error-message" role="alert">
          {errorMsg && <p class="text-red-500">{errorMsg}</p>}
        </div>

        <div class="mb-4">
          <label class="block text-gray-700 text-sm font-bold mb-2" for="email">
            Email
            <input type="email" id="email" name="email" required
                   class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" />
          </label>
        </div>

        <div class="mb-6">
          <label class="block text-gray-700 text-sm font-bold mb-2" for="password">
            Password
            <input type="password" id="password" name="password" required
                   class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline" />
          </label>
        </div>

        <div class="flex items-center justify-between">
          <button type="submit"
                  class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
            Sign In
          </button>
        </div>
      </form>
    </div>
  </div>
</Layout>
